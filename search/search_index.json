{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Technische Umgebung","text":"<ul> <li>openjdk-20 oder gr\u00f6\u00dfer</li> <li>Maven 3.6.3 oder gr\u00f6\u00dfer</li> <li>Vor-Konfiguriertes Spring Boot Project</li> </ul>"},{"location":"mkdocs/","title":"Lokale Nutzung der Lab-Beschreibung","text":"<p>F\u00fcr die Beschreibung wird MkDocs verwendet. Die wichtigsten Command f\u00fcr die lokale Nutzung sind:</p> <ul> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"mkdocs/#installation-von-mkdocs","title":"Installation von MkDocs","text":"<p>Siehe MkDocs Installation Guide.</p>"},{"location":"mkdocs/#installation-unter-ubuntu","title":"Installation unter Ubuntu","text":""},{"location":"mkdocs/#installation-von-python","title":"Installation von Python","text":"<pre><code>sudo apt-get install python3\n</code></pre>"},{"location":"mkdocs/#installation-von-pip","title":"Installation von Pip","text":"<pre><code>sudo apt-get install pip\n</code></pre> <p>Installation \u00fcberpr\u00fcfen:</p> <pre><code>pip -V\n</code></pre>"},{"location":"mkdocs/#installation-unter-windows","title":"Installation unter Windows","text":""},{"location":"mkdocs/#installation-von-python-und-pip","title":"Installation von Python und Pip","text":"<p>Windows-Installer ist hier verf\u00fcgbar.</p> <p>Installation \u00fcberpr\u00fcfen:</p> <pre><code>pip -V\n</code></pre>"},{"location":"mkdocs/#installation-von-mkdocs_1","title":"Installation von MkDocs","text":"<pre><code>pip install mkdocs\n</code></pre> <pre><code>pip install mkdocs-material\n</code></pre> <pre><code>pip install mkdocs-material-extensions\n</code></pre>"},{"location":"mkdocs/#lab-beschreibung-lokal-veroffentlichen","title":"Lab-Beschreibung lokal ver\u00f6ffentlichen","text":"<pre><code>mkdocs build\n</code></pre> <pre><code>mkddocs serve\n</code></pre> <p>Open in browser (http://127.0.0.1:8000/hexacleanws/)</p>"},{"location":"docs/help/git/","title":"Git","text":"<p>This section describes some useful git basics how you can \"copy\" it to your own remote repo.</p> <ul> <li>Fork The Repository</li> <li>Custom Repository<ul> <li>Clone</li> <li>Change the Remote</li> </ul> </li> </ul>"},{"location":"docs/help/git/#fork-the-repository","title":"Fork The Repository","text":"<p>If you want to keep track of the original repository, but add your own branches simply  fork it.</p> <ol> <li>Navigate to the repository: https://github.com/MatthiasEschhold/hexacleanws</li> <li>In the top-right corner of the page, click Fork.    </li> <li>Do not select Copy the DEFAULT branch only.    </li> <li>Click Create fork. \ud83c\udf89</li> </ol>"},{"location":"docs/help/git/#custom-repository","title":"Custom Repository","text":"<p>If forking the repository is not an option, you need to change the remote origin to yours after cloning it:</p>"},{"location":"docs/help/git/#clone","title":"Clone","text":"<p>To clone the repository simply run:</p> <pre><code>$ git clone https://github.com/MatthiasEschhold/hexacleanws.git\n</code></pre>"},{"location":"docs/help/git/#change-the-remote","title":"Change the Remote","text":"<p>To change the remote origin to your custom one, rename the old one and set the new one:</p> <pre><code># Rename the current origin\n$ git remote rename origin MatthiasEschhold-origin\n\n# Set the new remote origin\n$ git remote set-url origin &lt;https://git-repo/new-repository.git&gt;\n</code></pre>"},{"location":"docs/lab1/lab1/","title":"Aufgabe 1 Dom\u00e4nenmodell Vehicle","text":""},{"location":"docs/lab1/lab1/#lernziele","title":"Lernziele","text":"<ul> <li>Stereotyp Value Object verstehen und anwenden k\u00f6nnen</li> <li>Stereotyp Root Entity verstehen und anwenden k\u00f6nnen</li> <li>Fundament des Entities Ring / Domain Hexagon verstehen</li> </ul>"},{"location":"docs/lab1/lab1/#aufgabe-11-grundstruktur-root-entity-vehicle","title":"Aufgabe 1.1 Grundstruktur Root Entity Vehicle","text":"<ul> <li>Implementiere das Dom\u00e4nenmodell der Root Entity Vehicle wie dargestellt auf Folie 38 / Seite 35 im PDF </li> <li>Erstelle das Package vehicle.domain.model und lege die Dom\u00e4nenobjekte in diesem Package ab</li> <li>Implementiere die im folgenden aufgef\u00fchrten Validierungsregeln in den betroffenen Dom\u00e4nenobjekten</li> </ul> <p>  Abb 1: Vehicle Domain Model</p> Dom\u00e4nenobjekt Validierungsregel Vehicle Die Eigenschaften Vin, LicensePlate und Mileage m\u00fcssen immer vorhanden sein. VIN Ein valider Wert muss dem vorgesehenen Pattern folgen. LicensePlate Ein valider Wert muss dem vorgesehenen Pattern folgen. Mileage Der Kilometerstand muss gr\u00f6\u00dfer 0 sein. CountryOfManufacture Ein valider Wert muss dem vorgesehenen Pattern folgen. Alle anderen Dom\u00e4nenobjekte Kein Nullwerte, keine leeren oder blank Strings."},{"location":"docs/lab1/lab1/#regex-pattern-fur-das-value-object-vin","title":"Regex Pattern f\u00fcr das Value Object Vin","text":"<p>Beispiele: - WP0ZZZ99ZTS392155  - WBAOLZ99ZTS349156</p> <pre><code>\"(?=.*\\\\d|=.*[A-Z])(?=.*[A-Z])[A-Z0-9]{17}\"\n</code></pre>"},{"location":"docs/lab1/lab1/#regex-pattern-fur-das-value-object-licenseplate","title":"Regex Pattern f\u00fcr das Value Object LicensePlate","text":"<p>Beispiele: - B-AB 123  - ES-CD 456</p> <pre><code>\"^[A-Z0-9]{1,7}$\"\n</code></pre>"},{"location":"docs/lab1/lab1/#regex-pattern-fur-das-value-object-countryofmanufacture","title":"Regex Pattern f\u00fcr das Value Object CountryOfManufacture","text":"<p>Beispiele: - US  - DE</p> <pre><code>\"^[A-Z]{2}$\"\n</code></pre>"},{"location":"docs/lab1/lab1/#aufgabe-12-rich-domain-model-verhalten-am-domanenobjekt","title":"Aufgabe 1.2 Rich Domain Model - Verhalten am Dom\u00e4nenobjekt","text":"<p>Implementiere die Aktualisierung des Kilometerstandes (Mileage) mit Plausibilit\u00e4tspr\u00fcfung.</p>"},{"location":"docs/lab1/lab1/#plausibilitatsprufung-fur-den-kilometerstand","title":"Plausibilit\u00e4tspr\u00fcfung f\u00fcr den Kilometerstand","text":"<pre><code>mew milegae &gt; previous mileage\n</code></pre>"},{"location":"docs/lab2/lab2/","title":"Aufgabe 2 Anwendungsf\u00e4lle der Root Entity Vehicle","text":""},{"location":"docs/lab2/lab2/#lernziele","title":"Lernziele","text":"<ul> <li>Stereotyp Use Case Input Port verstehen und anwenden k\u00f6nnen</li> <li>Stereotyp Use Case Output Port verstehen und anwenden k\u00f6nnen</li> <li>Stereotyp Interactor verstehen und anwenden k\u00f6nnen</li> <li>Aufgaben des Use Cases Ring / Application Hexagon verstehen</li> </ul>"},{"location":"docs/lab2/lab2/#aufgabe-20-basisstruktur-des-use-cases-ring-anlegen","title":"Aufgabe 2.0 Basisstruktur des Use Cases Ring anlegen","text":"<p>1) Erstelle das Package vehicle.usecase.in 2) Erstelle das Package vehicle.usecase.out 3) Erstelle das Package vehicle.usecase.interactor</p>"},{"location":"docs/lab2/lab2/#aufgabe-21-anwendungsfall-fahrzeug-anlegen","title":"Aufgabe 2.1 Anwendungsfall Fahrzeug anlegen","text":"<p>1) Erstelle die notwendigen ein- und ausgehenden Use Case f\u00fcr die Fahrzeuganlage 2) Erstelle den Use Case Interactor des Anwendungsfalls 3) Leg die Klassen in den entsprechenden Packages ab</p>"},{"location":"docs/lab2/lab2/#schnittstellenbeschreibung","title":"Schnittstellenbeschreibung","text":"Schnittstellenelement Dom\u00e4nenobjekte Parameter Vin, LicensePlate, Mileage R\u00fcckgabe Vehicle"},{"location":"docs/lab2/lab2/#ablauf-des-anwendungsfalls","title":"Ablauf des Anwendungsfalls","text":"<p>1) Abfrage der Fahrzeugdaten bei einem externen Service anhand der Vin 2) Erstellung des Fahrzeugs 2) Speichern der Fahrzeugdaten in der Datenbank</p> <p>Scope beachten! Use Cases Ring!</p>"},{"location":"docs/lab2/lab2/#aufgabe-22-anwendungsfall-kilometerstand-aktualisieren","title":"Aufgabe 2.2 Anwendungsfall Kilometerstand aktualisieren","text":"<p>1) Erstelle die notwendigen ein- und ausgehenden Use Case f\u00fcr die Fahrzeuganlage 2) Erstelle den Use Case Interactor des Anwendungsfalls 3) Leg die Klassen in den entsprechenden Packages ab</p>"},{"location":"docs/lab2/lab2/#schnittstellenbeschreibung_1","title":"Schnittstellenbeschreibung","text":"Schnittstellenelement Dom\u00e4nenobjekte Parameter Vin, Mileage R\u00fcckgabe void"},{"location":"docs/lab2/lab2/#ablauf-des-anwendungsfalls_1","title":"Ablauf des Anwendungsfalls","text":"<p>1) Auslesen des Fahrzeugs aus der Datenbank anhand der Vin 2) Aktualisierung mit Plausibilit\u00e4tspr\u00fcfung des Kilometerstandes 3) Speichern des Fahrzeugs in der Datenbank</p>"},{"location":"docs/lab3/lab3/","title":"Aufgabe 3 Implementierung der Interface Adapters","text":""},{"location":"docs/lab3/lab3/#lernziele","title":"Lernziele","text":"<ul> <li>Meta-Stereotyp Interface Adapter verstehen</li> <li>Beispiele f\u00fcr Stereotypen von Interface Adapters verstehen und anwenden k\u00f6nnen</li> <li>Aufgaben und Konzepte des Interface Adapters Ring / Adapters Hexagon verstehen</li> </ul>"},{"location":"docs/lab3/lab3/#aufgabe-30-basisstruktur-des-interace-adapters-ring-anlegen","title":"Aufgabe 3.0 Basisstruktur des Interace Adapters Ring anlegen","text":"<p>1) Erstelle das Package vehicle.adapter.in 2) Erstelle das Package vehicle.adapter.out</p>"},{"location":"docs/lab3/lab3/#aufgabe-31-anwendungsfall-fahrzeug-anlegen","title":"Aufgabe 3.1 Anwendungsfall Fahrzeug anlegen","text":"<p>Die Interface Adapters solle die Integration der technischen Komponenten nur andeuten! Fokus liegt auf der Implementierung der Use Cases, der eingesetzten Designkonzepte und der Adaption mittels Mapping.</p> <p>1) Der Anwendungsfall wird durch eine REST API f\u00fcr das eigene JavaScript-Frontend exponiert 2) Es wird eine relationale Datenbank f\u00fcr die Persistenz verwendet 3) Es wird ein REST-Service f\u00fcr die Abfrage der Fahrzeugdaten verwendet 4) Erstellt die notwendigen Interfaces Adapters und Data Transfer Objects 5) Verwende die Two-Way Mapping Strategie f\u00fcr das Mapping der Data Transfer Objects und der Dom\u00e4nenobjekte</p>"},{"location":"docs/lab3/lab3/#aufgabe-32-anwendungsfall-kilometerstand-aktualisieren","title":"Aufgabe 3.2 Anwendungsfall Kilometerstand aktualisieren","text":"<p>Aufbauend auf Aufgabe 3.1</p> <p>1) Der Anwendungsfall wird durch eine REST API f\u00fcr das eigene JavaScript-Frontend exponiert 4) Erstellt die (noch weiter) notwendigen Interfaces Adapters und Data Transfer Objects 5) Verwende die Two-Way Mapping Strategie f\u00fcr das Mapping der Data Transfer Objects und der Dom\u00e4nenobjekte</p>"},{"location":"docs/lab3/lab3/#33-analysiert-den-einsatz-von-mapping-frameworks","title":"3.3 Analysiert den Einsatz von Mapping-Frameworks","text":"<p>1) Welche Mapping-Frameworks gibt es? 2) Welche Vor- und Nachteile haben die Frameworks?</p> <p>MapStruct Orika</p>"},{"location":"docs/lab4/lab4/","title":"Aufgabe 4 Weitere Anwendungsf\u00e4lle der Root Entity Vehicle","text":""},{"location":"docs/lab4/lab4/#lernziele","title":"Lernziele","text":"<ul> <li>Strategie f\u00fcr den Use Case Schnitt verstehen und anwenden k\u00f6nnen</li> <li>Erfahren, wie das Modul in der Clean Architecture w\u00e4chst und erweitert wird</li> <li>Stereotyp Domain Service verstehen und anwenden k\u00f6nnen</li> </ul>"},{"location":"docs/lab4/lab4/#aufgabe-41-anwendungsfall-abfrage-der-fahrzeugdaten-fur-das-eigene-frontend","title":"Aufgabe 4.1 Anwendungsfall Abfrage der Fahrzeugdaten f\u00fcr das eigene Frontend","text":"<p>1) Das Frontend ben\u00f6tigt Fahrzeugdaten f\u00fcr die Anzeige 2) Entscheide dich f\u00fcr einen Use-Case-Schnitt und implementiere den Anwendungsfall inklusive Interactor, Interfaces Adapters und Data Transfer Objects 3) Verwende die Two-Way Mapping Strategie f\u00fcr das Mapping der Data Transfer Objects und der Dom\u00e4nenobjekte</p>"},{"location":"docs/lab4/lab4/#schnittstellenbeschreibung","title":"Schnittstellenbeschreibung","text":"Schnittstellenelement Dom\u00e4nenobjekte Parameter Vin R\u00fcckgabe Vehicle"},{"location":"docs/lab4/lab4/#ablauf-des-anwendungsfalls","title":"Ablauf des Anwendungsfalls","text":"<p>Abfrage der Fahrzeugdaten aus der eigenen Datenbank anhand der Vin</p>"},{"location":"docs/lab4/lab4/#aufgabe-42-anwendungsfall-fahrzeugstammdaten-fur-externe-konsumenten","title":"Aufgabe 4.2 Anwendungsfall Fahrzeugstammdaten f\u00fcr externe Konsumenten","text":"<p>1) Das System Spare Parts Management ben\u00f6tigt Fahrzeugstammdaten f\u00fcr Ersatzteilbestellungen 2) Entscheide dich f\u00fcr einen Use-Case-Schnitt und implementiere den Anwendungsfall inklusive Interactor, Interfaces Adapters und Data Transfer Objects 3) Verwende die Two-Way Mapping Strategie f\u00fcr das Mapping der Data Transfer Objects und der Dom\u00e4nenobjekte</p>"},{"location":"docs/lab4/lab4/#schnittstellenbeschreibung_1","title":"Schnittstellenbeschreibung","text":"Schnittstellenelement Dom\u00e4nenobjekte Parameter Vin R\u00fcckgabe Vehicle Master Data"},{"location":"docs/lab4/lab4/#ablauf-des-anwendungsfalls_1","title":"Ablauf des Anwendungsfalls","text":"<p>Abfrage der Fahrzeugstammdaten aus der eigenen Datenbank anhand der Vin</p>"},{"location":"docs/lab4/lab4/#aufgabe-43-erweiterung-des-anwendungsfalls-fahrzeuganlage-mit-risikobewertung-und-diebstahlstatus","title":"Aufgabe 4.3 Erweiterung des Anwendungsfalls Fahrzeuganlage mit Risikobewertung und Diebstahlstatus","text":"<p>1) Bei der Fahrzeuganlage ist eine Risikobewertung sowie die Abfrage des Diebstahlstatus notwendig 2) F\u00fcr die Risikobewertung sind Risikol\u00e4nder relevant, die von einem externen Service abgefragt werden 3) Wird ein Risiko-Score von X ermittelt, muss eine Diebstahlstatusabfrage bei Interpol erfolgen 4) Entscheide dich f\u00fcr einen Use-Case-Schnitt und implementiere den Anwendungsfall inklusive Interactor, Interfaces Adapters und Data Transfer Objects 5) Wie k\u00f6nnte eine passende Fehlerbehandlung in diesem Anwendungsfall aussehen? Implementiere diese. 6) Welche neuen Dom\u00e4nenobjekte ben\u00f6tigst du f\u00fcr die Implementierung? Implementiere diese.</p>"},{"location":"docs/lab4/lab4/#risikobewertung","title":"Risikobewertung","text":""},{"location":"docs/lab4/lab4/#schnittstellenbeschreibung-risikolander","title":"Schnittstellenbeschreibung Risikol\u00e4nder","text":"Schnittstellenelement Dom\u00e4nenobjekte Parameter Keine R\u00fcckgabe List of RiskCountry"},{"location":"docs/lab4/lab4/#schnittstellenbeschreibung-diebstahlstatusabfrage-interpol","title":"Schnittstellenbeschreibung Diebstahlstatusabfrage Interpol","text":"Schnittstellenelement Dom\u00e4nenobjekte Parameter Vin R\u00fcckgabe TheftStatus <pre><code>public enum TheftStatus {\n    STOLEN, NOT_STOLEN, UNKNOWN\n}\n</code></pre>"},{"location":"docs/lab4/lab4/#ablauf-des-anwendungsfalls_2","title":"Ablauf des Anwendungsfalls","text":"<p>1) Ermittlung des Risikoscores anhand der RiskCountries und LicensePlate 2) Bei einem Risikoscore &gt; X Abfrage des Diebstahlstatus bei Interpol 3) Abfrage der Fahrzeugdaten bei einem externen Service anhand der Vin 4) Erstellung des Fahrzeugs 5) Speichern der Fahrzeugdaten in der Datenbank</p>"},{"location":"docs/lab5/lab5/","title":"Aufgabe 5 Fachliche Modularisierung anhand Root Entities","text":""},{"location":"docs/lab5/lab5/#lernziele","title":"Lernziele","text":"<ul> <li>Fachliche Modularisierung anhand von Root Entities verstehen und anwenden k\u00f6nnen</li> <li>Erfahren, wie das System in der Clean Architecture w\u00e4chst und erweitert wird</li> <li>Strategien f\u00fcr die Behandlung von Abh\u00e4ngigkeiten zwischen Root Entities verstehen</li> </ul>"},{"location":"docs/lab5/lab5/#aufgabe-51-anwendungsfall-werkstattauftrag-anlegen","title":"Aufgabe 5.1 Anwendungsfall Werkstattauftrag anlegen","text":"<p>1) F\u00fcr die Anlage eines Werkstattauftrags werden ein Teil der Fahrzeugdaten ben\u00f6tigt 2) Die Abfrage muss anhand des Kennzeichens oder auch Fahrgestellnummer m\u00f6glich sein 3) Implementiere ein Muster deiner Wahl, um diese Abh\u00e4ngigkeit zwischen Root Entites zu implementieren</p>"},{"location":"docs/lab5/lab5/#schnittstellenbeschreibung","title":"Schnittstellenbeschreibung","text":"Schnittstellenelement Dom\u00e4nenobjekte Parameter Vin R\u00fcckgabe Vehicle Data Schnittstellenelement Dom\u00e4nenobjekte Parameter LicensePlate R\u00fcckgabe Vehicle Data"},{"location":"docs/lab5/lab5/#fahrzeugdaten-die-im-werkstattauftrag-benotigt-werden","title":"Fahrzeugdaten die im Werkstattauftrag ben\u00f6tigt werden","text":"<pre><code>VehicleData {\n    licensePlate: String\n    vin: String\n    mileage: double        \n}\n</code></pre>"},{"location":"docs/lab5/lab5/#ablauf-des-anwendungsfalls","title":"Ablauf des Anwendungsfalls","text":"<p>Abfrage der Fahrzeugstammdaten aus der eigenen Datenbank</p>"},{"location":"docs/lab5/lab5/#aufgabe-52-anwendungsfall-kunde-und-fahrzeug-verknupfen","title":"Aufgabe 5.2 Anwendungsfall Kunde und Fahrzeug verkn\u00fcpfen","text":"<p>1) In der Kundenverwaltung wird ein Fahrzeug nach Anlage mit dem Kunden verkn\u00fcpft 2) Diese Zuordnung wird anhand des Kennzeichens und der Fahrgestellnummer am Kundenobjekt durchgef\u00fchrt 3) Implementiere ein Muster deiner Wahl, um diese Abh\u00e4ngigkeit zwischen Root Entites zu implementieren</p>"},{"location":"docs/lab5/lab5/#schnittstellenbeschreibung_1","title":"Schnittstellenbeschreibung","text":"Schnittstellenelement Dom\u00e4nenobjekte Parameter Vin R\u00fcckgabe Vehicle Data Schnittstellenelement Dom\u00e4nenobjekte Parameter LicensePlate R\u00fcckgabe Vehicle Data"},{"location":"docs/lab5/lab5/#fahrzeugdaten-die-am-kundenobjekt-benotigt-werden","title":"Fahrzeugdaten die am Kundenobjekt ben\u00f6tigt werden","text":"<pre><code>VehicleData {\n    licensePlate: String\n    vin: String    \n}\n</code></pre>"},{"location":"docs/lab5/lab5/#ablauf-des-anwendungsfalls_1","title":"Ablauf des Anwendungsfalls","text":"<p>Abfrage der Fahrzeugstammdaten aus der eigenen Datenbank</p>"},{"location":"docs/old/lab1/","title":"Entities und Use Cases","text":""},{"location":"docs/old/lab1/#aufgabe-1-domanenmodell-vehicle","title":"Aufgabe 1 Dom\u00e4nenmodell Vehicle","text":"<p>Implementiere das dargestellte Dom\u00e4nenmodell</p> <p> Abb 1: Vehicle Domain Model -  - Vehicle ist die Root Entity des Dom\u00e4nenmodell. <li>Implementiere die untergeordneten Dom\u00e4nenobjekte als Value Object</li> <li>Erstelle das Package vehicle.domain.model und lege die Dom\u00e4nenobjekte in diesem Package ab</li></p> <li>Implementiere die im folgenden aufgef\u00fchrten Validierungsregeln in den betroffenen Dom\u00e4nenobjekte</li> Coding Task 1 Dom\u00e4nenmodell Vehicle <ol> <li>Implementiere das dargestellte Dom\u00e4nenmodell Vehicle</li> <li>Vehicle ist die Root Entity des Dom\u00e4nenmodell.</li> <li>Implementiere die untergeordneten Dom\u00e4nenobjekte als Value Object</li> <li>Erstelle das Package vehicle.domain.model und lege die Dom\u00e4nenobjekte in diesem Package ab</li> <li>Implementiere die im folgenden aufgef\u00fchrten Validierungsregeln in den betroffenen Dom\u00e4nenobjekte</li> </ol> Domain Object Validation Rule Vehicle Alle Eigenschaften m\u00fcssen vorhanden und f\u00fcr sich valide sein. VIN Ein valider Wert muss dem Vin-Regex-Pattern folgen. LicensePlate Ein valider Wert muss dem LicensePlate-Regex-Pattern folgen. Mileage Der Kilometerstand muss gr\u00f6\u00dfer 0 sein. EquipmentCode Ein valider Wert muss dem EquipmentCode-Regex-Pattern folgen. Alle anderen Dom\u00e4nenobjekte Kein Nullwerte, keine leeren oder blank Strings Vin-Regex-Pattern <pre><code>// examples\n// WP0ZZZ99ZTS392155\n// WBAOLZ99ZTS349156\n\n\"(?=.*\\\\d|=.*[A-Z])(?=.*[A-Z])[A-Z0-9]{17}\"\n</code></pre> LicensePlate-Regex-Pattern <pre><code> \"[A-Z\u00d6\u00dc\u00c40-9]{1,5}[-]{0,1}[A-Z\u00d6\u00dc\u00c40-9]{0,10}[-]{0,1}[A-Z\u00d6\u00dc\u00c40-9]{0,4}\"\"[A-Z\u00d6\u00dc\u00c40-9]{1,5}[-]{0,1}[A-Z\u00d6\u00dc\u00c40-9]{0,10}[-]{0,1}[A-Z\u00d6\u00dc\u00c40-9]{0,4}\"  \n</code></pre> EquipmentCode-Regex-Pattern <pre><code>// examples\n// WP0ZZZ99ZTS392155\n// WBAOLZ99ZTS349156\n\n\"(?=.*\\d|=.*[A-Z])(?=.*[A-Z])[A-Z0-9]{17}\"\n</code></pre> Tests Coding Task 1 RUN DomainEntityTest     RUN CleanArchitectureFitnessFunction"},{"location":"docs/old/lab1/#domain-service-und-use-cases","title":"Domain Service und Use Cases","text":"Coding Task 2 Erstelle die ein- und ausgehenden Use Cases sowie den Use-Case-Connector (Stereotype Service) <ol> <li>Erstelle das Package domain.service als Subpackage von vehicle und erstelle die Klasse VehicleService </li> <li>Erstelle die Packages usecase.in und usecase.out als Subpackages von vehicle</li> <li>Erstelle den eingehenden Use Case VehicleCommand im daf\u00fcr vorgesehenen Package mit der Schnittstelle createVehicle</li> <li>Erstelle die ausgehenden Use Cases VehicleRepository und FetchVehicleMasterData im daf\u00fcr vorgesehenen Package mit den daf\u00fcr vorgesehenen Schnittstellen</li> <li>Implementiere den Anwendungsfall createVehicle im VehicleService</li> </ol> Schnittstelle VehicleCommand <pre><code>Vehicle createVehicle(Vin vin, VehicleMotionData vehicleMotionData);\n</code></pre> Schnittstelle VehicleRepository <pre><code>Vehicle save(Vehicle vehicle);\n</code></pre> Schnittstelle FetchVehicleMasterData <pre><code>VehicleMasterData fetch(Vin vin);\n</code></pre> Tests Coding Task 2 RUN UseCaseConnectorTest     RUN CleanArchitectureFitnessFunction"},{"location":"docs/old/lab2/","title":"Adapter Ring - Implementierung des Ports &amp; Adapters Pattern","text":""},{"location":"docs/old/lab2/#input-adapter","title":"Input Adapter","text":"Coding Task 3 Erstelle einen Input Adapter f\u00fcr den eingehenden Use Case <ol> <li>Erstelle das Package adapter.in als Subpackage von vehicle und erstelle den Interface Adapter VehicleController</li> <li>Implementiere die technische HTTP Schnittstelle zur Anlage eines Fahrzeugs und nutze hierf\u00fcr den Use Case VehicleCommand</li> <li>Erstelle das DTO VehicleResource (siehe Vorlage) und ein Mapper (VehicleWebMapper) f\u00fcr das DTO</li> <li>Ignoriere Details des Frameworks und des REST Architekturstils bei der Implementierung</li> </ol> VehicleResource     ```java public class VehicleResource {      private String vin;     private VehicleMotionDataResource vehicleMotionData;     private VehicleMasterDataResource vehicleMasterData;      public VehicleMasterDataResource getVehicleMasterData() {         return vehicleMasterData;     }      public void setVehicleMasterData(VehicleMasterDataResource vehicleMasterData) {         this.vehicleMasterData = vehicleMasterData;     }      public String getVin() {         return vin;     }      public void setVin(String vin) {         this.vin = vin;     }      public VehicleMotionDataResource getVehicleMotionData() {         return vehicleMotionData;     }      public void setVehicleMotionData(VehicleMotionDataResource vehicleMotionData) {         this.vehicleMotionData = vehicleMotionData;     } }     ```"},{"location":"docs/old/lab2/#output-adapter","title":"Output Adapter","text":"Coding Task 4 Erstelle die Output Adapter f\u00fcr die ausgehenden Use Cases <ol> <li>Erstelle das Package adapter.out als Subpackage von vehicle</li> und erstelle das Datenbank Repository VehicleDbRepository <li>Implementiere den Use Case VehicleRepository</li> <li>F\u00fchre das DTO VehicleDbEntity (siehe Vorlage) sowie den Mapper VehicleDbMapper ein</li> <li>Ignoriere Details des Frameworks bei der Implementierung</li> </ol> VehicleDbEntity     ```java public class VehicleDbEntity {      private String vin;     private String licensePlate;      public String getVin() {         return vin;     }      public void setVin(String vin) {         this.vin = vin;     }      public String getLicensePlate() {         return licensePlate;     }      public void setLicensePlate(String licensePlate) {         this.licensePlate = licensePlate;     } }     ```"},{"location":"docs/old/lab3/","title":"Domain Service Pattern des Domain Ring","text":""},{"location":"docs/old/lab3/#domain-service-pattern","title":"Domain Service Pattern","text":"<p>Ein Domain Service implementiert Business Logik, die keinem Dom\u00e4nenobjekt zugeordnet werden kann, oder  wenn f\u00fcr die Ausf\u00fchrung der Business Logik zus\u00e4tzlich Abh\u00e4ngigkeiten aufgebaut werden m\u00fcssen, die den  Abh\u00e4ngigkeitsregeln eines Dom\u00e4nenobjekts widersprechen w\u00fcrden</p>"},{"location":"docs/old/lab3/#anwendungsfall-risikobewertung-und-diebstahlprufung","title":"Anwendungsfall Risikobewertung und Diebstahlpr\u00fcfung","text":""},{"location":"docs/old/lab3/#coding-task-4","title":"Coding Task 4","text":"<p>Implementiere den TheftRiskRatingService </p> <ol> <li>Erstelle das Package domain.service als Subpackage von vehicle und erstelle den Domain Service TheftRiskRatingService</li> <li>Integriere die Risikobewertung in den Anlageprozess f\u00fcr ein Fahrzeug</li> <li>Betrachte das ausgebaute Dom\u00e4nenmodell in domain.service und nutze die Dom\u00e4nenobjekte</li> <li>Wird ein Risikobewertung &gt; 60 Risikopunkte ermittelt, muss eine Diebstahlabfrage bei Interpol durchgef\u00fchrt werden</li> <li>Erg\u00e4nze Use Case und Adapter Implementierung f\u00fcr die Diebstahlabfrage bei Interpol, f\u00fcr die Abfrage von Risikol\u00e4nder sowie -marken</li> </ol> <p></p> User Story Risikobewertung Fahrzeudiebstahl nach \u00a70815a  Als Produktmanager m\u00f6chte ich, dass die Risikobewertung f\u00fcr ein Fahrzeug im Anlageprozess durchgef\u00fchrt wird. Die Risikobewertung folgt dem im folgenden beschriebenen Regelwerk:  <ol> <li></li> </ol> Akzeptanzkriterien: <ol> <li></li> </ol> Erweitere Risikobewertung auf Basis von Risikol\u00e4nder und Risikomarken f\u00fcr die Risikobewertung nach \u00a70815a  Als Produktmanager m\u00f6chte dich die Risikobewertung nach \u00a70815a mit der Ber\u00fccksichtigung von Risikol\u00e4ndern und -marken erweitern.  <ol> <li></li> </ol> Akzeptanzkriterien: <ol> <li></li> </ol> <p>Weitere Informationen zur Risikobewertung und Diebstahlabfrage bei Interpol:</p> Use Case Diebstahlabfrage Interpol     ```java public interface DetectInterpolTheftStatus {     TheftStatus detect(Vin vin, LicensePlate licensePlate); }    ```  Use Case Abfrage Risikol\u00e4nder     ```java public interface FetchHighRiskCountries {     HighRiskCountries fetch(); }    ```  Use Case Abfrage Risikomarken     ```java public interface FetchHighRiskVehicleModels {     HighRiskVehicleModels fetch(); }    ```"},{"location":"docs/old/lab4/","title":"Weitere Designprinzipen","text":""},{"location":"docs/old/lab4/#encapsulation-und-lesbarkeit-durch-command-objekte","title":"Encapsulation und Lesbarkeit durch Command Objekte","text":""},{"location":"docs/old/lab4/#erweiterung-des-domanenmodell-mileage-und-mileage-history","title":"Erweiterung des Dom\u00e4nenmodell Mileage und Mileage History","text":""},{"location":"docs/old/lab4/#anwendungsfall-update-mileage-mit-plausibilitatsprufung","title":"Anwendungsfall Update Mileage mit Plausibilit\u00e4tspr\u00fcfung","text":"Coding Task 5 Implementiere die Abfrage von Fahrzeudaten anhand der Vin <li>F\u00fchre den eingehenden Use Case VehicleQuery mit der Schnittstelle wie unten beschrieben ein.</li> <li>Erweitere den ausgehenden Use Case VehicleRepository um die Schnittstelle wie unten beschrieben. <li>Implementiere den eingehenden Use Case im VehicleService</li> Schnittstelle VehicleQuery <pre><code>Vehicle findByVin(Vin vin);\n</code></pre> Schnittstelle VehicleRepository <pre><code>VehicleMotionData findVehicleMotionDataByVin(Vin vin);\n</code></pre>"},{"location":"docs/old/lab5/","title":"Abh\u00e4ngigkeiten zwischen Dom\u00e4nenmodulen","text":""},{"location":"docs/old/lab5/#neue-domanenmodule","title":"Neue Dom\u00e4nenmodule","text":"<p>Investigate the introduced domain modules GarageOrder and PartsCatalogue. Both domain modules depends on the Vehicle domain module.</p> <p>In context of the garage order only the license plate and, the mileage of a vehicle are relevant.</p> <p>For the parts catalogue only the vin, the vehicle model and, the domain value has5GSupport are from importance.</p> <p>See the garage order form for more details:</p> <p></p> <p>See also the explosion chart of the front brake, as a example for the graphical visualization of a spare part in the parts catalogue:</p> <p></p> <p>Additional information are described in the corresponding spare parts table.</p> <p></p>"},{"location":"docs/old/lab5/#kopplung-zwischen-wurzelobjekten-und-domanenmodulen-neu-denken","title":"Kopplung zwischen Wurzelobjekten und Dom\u00e4nenmodulen neu denken","text":"<p>In a traditional data-centric and layered architecture, it is common to design the application around a centric data model. But this leads to high coupling in the long term (see section \"Problems of Layered Architecture\" in the trainings slides). In this lab the Adapter.Out - UseCase.In Pattern and the Application Service Pattern are described. Additional approaches are shown in the training slides.</p>"},{"location":"docs/old/lab5/#the-adapterout-usecasein-pattern","title":"The Adapter.Out - UseCase.In Pattern","text":"<p>Implement the Adapter.Out - UseCase.In Pattern between the domain modules Garage order and Vehicle.</p>"},{"location":"docs/old/lab5/#introduce-the-use-case-fetchvehiclebylicenseplate-vehicle-module","title":"Introduce the Use Case FetchVehicleByLicensePlate (Vehicle Module)","text":"Coding Task 6.1 <ol> <li>          Introduce an additional incoming use case in the domain module Vehicle with the name           FetchVehicleByLicensePlate. The use case should contain the method fetchByLicensePlate </li> <li>          Implement the use case by extending the VehicleQueryService.       </li> </ol> Java <pre><code>Vehicle fetchByLicensePlate(LicensePlate licensePlate);\n</code></pre> Kotlin <pre><code>fun fetchByLicensePlate(licensePlate: LicensePlate): Vehicle;\n</code></pre> C# <pre><code>Vehicle FetchByLicensePlate(LicensePlate licensePlate);\n</code></pre> Verify 6.1 RUN DomainRing_Task_6_1     RUN ArchitectureTest_Task_6_1 (Java &amp; Kotlin)     RUN all architecture tests (C#)"},{"location":"docs/old/lab5/#implement-the-use-case-fetchvehicle-garage-order-module","title":"Implement the Use Case FetchVehicle (Garage Order Module)","text":"Coding Task 6.2 <ol> <li>          Have a look at the outgoing use case FetchVehicle in garage/order/usecase/out </li> <li>          Implement the output adapter with the name VehicleModuleClient and a mapper with the name           VehicleToOriginVehicleMapper.       </li> </ol> Verify 6.2 RUN OutputAdapter_Task_6_2     RUN ArchitectureTest_Task_6_2 (Java &amp; Kotlin)     RUN all architecture tests (C#)"},{"location":"docs/old/lab5/#the-application-service-pattern","title":"The Application Service Pattern","text":"Coding Task 6.3 Implement the Application Service Pattern between the domain modules Parts Catalogue and Vehicle. <ol> <li>       Have a look at the ExplosionChartApplicationService in parts/catalogue/appservice and notice the dependency to       VehicleQuery of the domain module vehicle.    </li> <li>         Complete the implementation of the use case ExplosionChartQuery in ExplosionChartQueryService </li> <li>         Use VehicleQuery from the vehicle module to fetch necessary vehicle data    </li> <li>         Implement and use the mapper VehicleToOriginVehicleMapper </li> </ol> Verify 6.3 RUN ApplicationService_Task_6_3     RUN ArchitectureTest_Task_6_3 (Java &amp; Kotlin)     RUN all architecture tests (C#)"},{"location":"docs/old/lab5/#clean-architecture-fitness-functions-currently-not-working","title":"Clean Architecture Fitness Functions - Currently Not Working","text":"Optional Coding Task 6.4 <ol> <li> RUN CleanArchitectureTest    </li> <li>       Fix the test by extending the test should_check_clean_architecture_all_rings_architectural_expressive </li> <li> RUN CleanArchitectureTest again. Why did the test pass now?    </li> </ol> Java &amp; Kotlin <pre><code>.adapterOutOfAdapterOutUseCaseInPattern(\"..garage.order.adapter.out..\")\n.applicationService(\"..parts.catalogue.appservice..\")\n</code></pre>"}]}